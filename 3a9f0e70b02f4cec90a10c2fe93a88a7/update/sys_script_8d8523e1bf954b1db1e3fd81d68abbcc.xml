<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<record_update table="sys_script">
  <sys_script action="INSERT_OR_UPDATE">
    <abort_action>false</abort_action>
    <access>package_private</access>
    <action_delete>false</action_delete>
    <action_insert>true</action_insert>
    <action_query>false</action_query>
    <action_update>false</action_update>
    <active>true</active>
    <add_message>false</add_message>
    <advanced>true</advanced>
    <change_fields>false</change_fields>
    <client_callable>false</client_callable>
    <collection>itsm_incident_change_record</collection>
    <condition>current.getValue("incident_id")!=null &amp;&amp; current.getValue("incident_id")!= ''</condition>
    <description/>
    <execute_function>false</execute_function>
    <filter_condition/>
    <is_rest>false</is_rest>
    <message/>
    <name>lt-发送通知1(事件修改记录新增)</name>
    <order>100</order>
    <priority>100</priority>
    <rest_method/>
    <rest_method_text/>
    <rest_service/>
    <rest_service_text/>
    <rest_variables/>
    <role_conditions/>
    <script>//gs.print("发送通知");
gs.include('GroupChatUtil');
//通知人
var userIds = [];
var msg_content = "";
var strUtils = new StringUtils();

var ccMsg = [];

//根据id查询
var incident_id = current.getValue("incident_id");
var inGr = new GlideRecord('incident');
if (!inGr.get(incident_id)) {
  gs.addErrorMessage('事件不存在' + sys_id);
  current.setAbortAction(true);
}
var number = inGr.getValue("number");

// 状态 = 已解决 通知呼叫者
if (current.getValue("current_state") == 6 &amp;&amp; !strUtils.isEmpty(current.getValue("before_state"))) {
  msg_content = "事件编号:" + number + "已解决";
  var caller_id = current.getValue("caller_id") + "";
  var chat = new GroupChatUtil();
  chat.sendServerMessage(caller_id, msg_content, false, "text");

  ccMsg.push(msg_content);
}


// 修改指派人 通知指派人
var ch_assigned_to = current.getValue("ch_assigned_to");
//gs.print("修改指派人: " + ch_assigned_to);
if (!strUtils.isEmpty(ch_assigned_to)) {
  msg_content = "你有新的事件需要处理,事件编号:" + number;
  var assigned_to = current.getValue("assigned_to") + "";
  var chat = new GroupChatUtil();
  chat.sendServerMessage(assigned_to, msg_content, false, "text");
}

// 修改指派组 通知指派组
var ch_assignment_group = current.getValue("ch_assignment_group");
//gs.print("修改指派组: " + ch_assignment_group);
if (!strUtils.isEmpty(ch_assignment_group)) {
  msg_content = "当前处理组有新的事件需要处理,事件编号:" + number;
  var chat = new GroupChatUtil();
  chat.sendServerMessage("", msg_content, true, "text");
}

// 当状态从 已解决 变为 处理中(重新打开) 通知 指派组,指派人
if (current.getValue("current_state") == 2 &amp;&amp; current.getValue("before_state") == 6) {
  msg_content = "事件编号:" + number + "已重新打开";
  var assigned_to = current.getValue("assigned_to") + "";
  var chat = new GroupChatUtil();
  chat.sendServerMessage(assigned_to, msg_content, false, "text");
  ccMsg.push(msg_content);
}

// 状态 = 关闭 通知 指派人
if (current.getValue("current_state") == 7 &amp;&amp; !strUtils.isEmpty(current.getValue("before_state"))) {
  msg_content = "事件编号:" + number + "已关闭";
  var assigned_to = current.getValue("assigned_to") + "";
  var chat = new GroupChatUtil();
  chat.sendServerMessage(assigned_to, msg_content, false, "text");
  ccMsg.push(msg_content);
}

//gs.print("是否发送抄送消息:" + ccMsg.length);
// 通知人不为0 发送通知
if (ccMsg.length != 0) {
  var ccMsgStr = ccMsg.join(",");
  var singleChat = new SingleChatUtil();
  var watch_list = strUtils.subListStrValue(current.getValue("watch_list"));
  singleChat.sendServerMessage(watch_list, '事件变动通知', ccMsgStr);
}</script>
    <sys_class_name>sys_script</sys_class_name>
    <sys_created_by>litao</sys_created_by>
    <sys_created_on>2022-06-13 22:34:09</sys_created_on>
    <sys_domain>global</sys_domain>
    <sys_domain_path>/</sys_domain_path>
    <sys_effective/>
    <sys_id>8d8523e1bf954b1db1e3fd81d68abbcc</sys_id>
    <sys_mod_count>1</sys_mod_count>
    <sys_name/>
    <sys_overrides/>
    <sys_package/>
    <sys_policy/>
    <sys_scope>3a9f0e70b02f4cec90a10c2fe93a88a7</sys_scope>
    <sys_update_name/>
    <sys_updated_by>litao</sys_updated_by>
    <sys_updated_on>2022-06-15 10:03:45</sys_updated_on>
    <template/>
    <when>before</when>
  </sys_script>
</record_update>
