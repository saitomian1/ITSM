<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<record_update table="sys_script_include">
  <sys_script_include action="INSERT_OR_UPDATE">
    <access/>
    <active>true</active>
    <api_name>ParentChildIncident</api_name>
    <caller_access/>
    <client_callable>true</client_callable>
    <description>临时方案,业务规则不能使用
1.父事件更新为关闭,子事件更新为解决  2.事件设置父事件,父事件状态为关闭,事件状态为解决</description>
    <name>ParentChildIncident</name>
    <script>var ParentChildIncident = Class.create();
ParentChildIncident.prototype = Object.extendsObject(AbstractAjaxProcessor, {

  //主事件进行中/暂停/解决-----一一对应修改子事件状态
  //主事件已关闭修改子事件为已解决
  //子事件状态为已关闭状态则不可被修改
  
  //更新子事件
  updateChildren: function() {
    var log = new LogUtils();
    var parent_sys_id = this.getParameter('parent_sys_id');
    var parent_incident_state = this.getParameter('parent_incident_state');
    var close_code = this.getParameter('close_code');
    var close_notes = this.getParameter('close_notes');
    if (log.isDebug("子事件")) {
      log.info("子事件parent_sys_id", parent_sys_id);
      log.info("子事件parent_incident_state", parent_incident_state);
      log.info("子事件close_code", close_code);
      log.info("子事件close_notes", close_notes);
    }
    //事件状态为已关闭
    if (parent_incident_state != 7) {
      return;
    }
    //查询子事件状态 != 已关闭 更新为 以解决
    var inGr = new GlideRecord('incident');
    inGr.addQuery('parent_incident', parent_sys_id);
    inGr.addQuery('incident_state', "!=", 7);
    inGr.addQuery('incident_state', "!=", 6);
    inGr.query();
    while (inGr.hasNext()) {
      var next = inGr.next();
      inGr.setValue("incident_state", 6);
      inGr.setValue("close_code", close_code);
      inGr.setValue("close_notes", "父事件关闭说明:" + close_notes);
      // 增加修改记录
      this.changeRecord(inGr);
      inGr.update();
    }
  },

  changeRecord: function(inGr) {
    var record = {};
    record.sys_id = inGr.getValue('sys_id');
    record.incident_state = inGr.getValue('incident_state');
    record.work_notes = inGr.getValue('work_notes');
    record.assignment_group = inGr.getValue('assignment_group');
    record.assigned_to = inGr.getValue('assigned_to');
    record.watch_list = inGr.getValue('watch_list');
    record.caller_id = inGr.getValue('caller_id');
    var changeRe = new ChangeIncidentRecord();
    changeRe.addRecordServer(record);
  },

  //当事件状态 !=以解决  !=已关闭,  查询父事件状态=已关闭, 则设置当前事件状态=以解决
  updateStateByParent: function() {
    if (true) {
      return;
    }
    var log = new LogUtils();
    var stringUtils = new StringUtils();

    var parent_sys_id = this.getParameter('parent_sys_id');
    var incident_state = this.getParameter('incident_state');
    if (log.isDebug("子事件")) {
      log.info("子事件parent_sys_id", parent_sys_id);
      log.info("子事件incident_state", incident_state);
    }
    if (!stringUtils.isEmpty(parent_sys_id) &amp;&amp; incident_state != 6 &amp;&amp; incident_state != 7) {
      var inGr1 = new GlideRecord('incident');
      if (!inGr1.get(parent_sys_id)) {
        gs.addErrorMessage('父类事件不存在');
        current.setAbortAction(true);
      }
      var parent_incident_state = inGr1.getValue("incident_state");
      if (log.isDebug("子事件")) {
        log.info("子事件查询父事件状态", parent_incident_state);
      }
      if (7 == parent_incident_state) {
       // 增加修改记录
      this.changeRecord(inGr);
        var result = {
          "incident_state": 6,
          "close_code": inGr1.getValue("close_code"),
          "close_notes": "父事件关闭说明:" + inGr1.getValue("close_notes")
        };
        this.addAttribute("result", result);
      }
    }
  }
});</script>
    <sys_class_name>sys_script_include</sys_class_name>
    <sys_created_by>litao</sys_created_by>
    <sys_created_on>2022-06-01 23:39:58</sys_created_on>
    <sys_effective/>
    <sys_id>24014524de13448ab855bfc4e89e134e</sys_id>
    <sys_mod_count>1</sys_mod_count>
    <sys_name/>
    <sys_package/>
    <sys_policy/>
    <sys_scope>3a9f0e70b02f4cec90a10c2fe93a88a7</sys_scope>
    <sys_update_name/>
    <sys_updated_by>litao</sys_updated_by>
    <sys_updated_on>2022-06-09 15:10:05</sys_updated_on>
  </sys_script_include>
</record_update>
